/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Counter, CounterInterface } from "../Counter";

const _abi = [
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decrement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102c6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806306661abd1461005c5780632baeceb71461007a578063a87d942c14610084578063d09de08a146100a2578063d826f88f146100ac575b600080fd5b6100646100b6565b6040516100719190610161565b60405180910390f35b6100826100bc565b005b61008c61011b565b6040516100999190610161565b60405180910390f35b6100aa610124565b005b6100b461013f565b005b60005481565b6000805411610100576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f7906101d9565b60405180910390fd5b60016000808282546101129190610228565b92505081905550565b60008054905090565b6001600080828254610136919061025c565b92505081905550565b60008081905550565b6000819050919050565b61015b81610148565b82525050565b60006020820190506101766000830184610152565b92915050565b600082825260208201905092915050565b7f436f756e7465723a20756e646572666c6f770000000000000000000000000000600082015250565b60006101c360128361017c565b91506101ce8261018d565b602082019050919050565b600060208201905081810360008301526101f2816101b6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061023382610148565b915061023e83610148565b9250828203905081811115610256576102556101f9565b5b92915050565b600061026782610148565b915061027283610148565b925082820190508082111561028a576102896101f9565b5b9291505056fea26469706673582212206d5dc48f95c7e8b1e0a108e066358f5054f065fbea714a6ff8113d79aa299b1b64736f6c63430008130033";

type CounterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CounterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Counter__factory extends ContractFactory {
  constructor(...args: CounterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Counter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Counter__factory {
    return super.connect(runner) as Counter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterInterface {
    return new Interface(_abi) as CounterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Counter {
    return new Contract(address, _abi, runner) as unknown as Counter;
  }
}
